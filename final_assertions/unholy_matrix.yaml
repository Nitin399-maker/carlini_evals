description: "Test if the model can solve a rather hard dynamic programming problem"
providers:
    - {id: openrouter:openai/o3-mini-high, config: { max_tokens: 8192} }

defaultTest:
  assert: []
  vars: {}

tests:
  - description: "Test if the model can solve a rather hard dynamic programming problem"
    vars:
      prompt: |-
        A binary 8x8 matrix is 'unholy' if there are no isolated 1s. A 1 is isolated if there isn't another 1 in any of the 4 direct cardinal directions. Write a C program that counts the total number of unholy 8x8 matricies.
        step = """To solve this question:
        - Use bit arithmetic and an unsigned long to represent the matrix.
        - Write a function is_unholy that tests if a matrix is unholy by bit-shifting and masking.

        Use a dynamic program to count the number of unholy matricies.
        - Recurse on the number of rows the matrix has.
        - Enumerate all 2^16 next two rows. This is enough to completely isolate the prior solutions from the next.

        Write out a plan for the program, and then implement the plan in C.and return the code in ```c ``` literals and do not include hypen in it Please ensure all characters in the code and explanation are standard ASCII only â€” no Unicode characters like em dashes, smart quotes, or non-breaking hyphens."""
    assert:
      - type: python
        value: "file://unholy_matrix.py:get_assertion"

# Persist for the web viewer
writeLatestResults: true
# Ensure caching stays on
commandLineOptions:
  cache: true