description: "Test if the model can infer what data to sum and what to ignore by example with vague instructions."
providers:
- {id: openrouter:openai/o4-mini-high, config: { max_tokens: 8192 }}

defaultTest:
  assert: []
  vars: {}

tests:
  - description: "Test if the model can infer what data to sum and what to ignore by example with vague instructions."
    vars:
      prompt: |-
        Here's some data
        QUERY A361
        Found at: 160392127418
        Number of times present: 4


        Found at: 150158692866
        Number of times present: 3


        Found at: 122340445248
        Number of times present: 17


        Found at: 137248651778
        Number of times present: 84


        Found at: 131891981708
        Number of times present: 66


        QUERY 32B57
        Found at: 194561247604
        Number of times present: 4


        Found at: 82888490886
        Number of times present: 3


        Found at: 115836535414
        Number of times present: 19


        Found at: 79615924948
        Number of times present: 80

        Write a python function called `process` that will take data like this as an argument and return a dict where the keys are the like A361/32B57 and the values are how often its present in total and return the code in ```python  ``` literals.
    assert:
      - type: python
        value: "file://vague_sum_data.py:assert_sum_some_data"

# Persist for the web viewer
writeLatestResults: true
# Ensure caching stays on
commandLineOptions:
  cache: true