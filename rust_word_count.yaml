description: "Test if the model can write a rust program that performs word counting."
providers:
  - id: openai:o3
    config: 
      max_tokens: 8192

defaultTest:
  assert: []
  vars: {}

tests:
  - description: "Test if the model can write a rust program that performs word counting."
    vars:
      prompt: |-
        Write a self-contained Rust program that prints a JSON output of how often each word appears in a text file located in /tmp/file.txt. So if the file contains "This is is is, an example" then the program should print to stdout.

        {"This": 1, "is": 2, "is,": 1, "an": 1, "example": 1}

        Don't import any crates that would require a Cargo.toml file. I'll just compile it with `rustc yourfile.rs` and it should work. The program should be run by calling /path/to/rust_word_count with no arguments
    assert:
      - type: python
        value: "file://rust_word_count.py:assert_rust_word_count"

writeLatestResults: true
commandLineOptions:
  cache: true