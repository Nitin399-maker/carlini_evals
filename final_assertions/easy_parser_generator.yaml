
description: "Test if the model can understand a vague BNF-style grammar and write a Python function that evaluates expressions based on the grammar rules."
providers:
- id: openai:chat:o4-mini
  config:
    max_tokens: 8192
    reasoning_effort: high

defaultTest:
  assert: []
  vars: {}

tests:
  - description: "Test if the model can understand a vague BNF-style grammar and write a Python function that evaluates expressions based on the grammar rules."
    vars:
      prompt: |-
        Given this BNF-style grammar write a Python function `evaluate(str)` that evaluates the expression and return the code in ````python ```` literals.

        <expression> ::= <term> | <expression> '+' <term> | <expression> '-' <term>

        <term> ::= <factor> | <term> '*' <factor> | <term> '/' <factor>

        <factor> ::= <number> | '(' <expression> ')' | <prefix-op> <factor>

        <prefix-op> ::= 'sin' | 'cos'

        <number> ::= <digit> | <number> <digit>

        <digit> ::= '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9'

        For example you can evaluate this

        sin(3 + 2 * 4) - cos(15) = -0.240302
    assert:
      - type: python
        value: "file://easy_parser_generator.py:assert_bnf_evaluator"

# Persist for the web viewer
writeLatestResults: true
# Ensure caching stays on
commandLineOptions:
  cache: true
