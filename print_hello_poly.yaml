description: "Test if the model can generate a program that prints "
providers:
- id: openai:chat:o4-mini
  config:
    max_tokens: 8192
    reasoning_effort: high

defaultTest:
  assert: []
  vars: {}

tests:
  - description: "Test if the model can generate a program that prints "
    vars:
      prompt: |-
        Write a single file that I can save as foo.py.rs that I can run as either a rust program or a python program, and so both will print "hello world". Specifically if I run `python foo.py.rs` or `rustc -o a.out foo.py.rs && ./a.out` I should see "hello world" printed to the console and return the code in ```python ``` literals and do not inlcude hypen in code.

        To help you out, here's a valid answer for how to do this in C:

        ```
        #include <stdio.h>
        #define sdf b /*                                                                                                                 
        print("hello world")                                                                                                             
        """                                                                                                                              
        #define wer b */

        int main() {
          printf("hello world\n");
        }

        #define ert s """
        ```
    assert:
      - type: python
        value: "file://print_hello_poly.py:evaluate_polyglot_code"

# Persist for the web viewer
writeLatestResults: true
# Ensure caching stays on
commandLineOptions:
  cache: true